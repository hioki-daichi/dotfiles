PROMPT="%(?.%F{blue}.%F{red})[%n@%m %~]$ %f"
SPROMPT="%{${fg[blue]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
[ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
  PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"

function update_prompt_for_aws_vault() {
  if [[ ! -z $AWS_VAULT_SHELL  ]]; then
    PROMPT="($AWS_VAULT) $PROMPT"
  fi
}
update_prompt_for_aws_vault

export DYLD_LIBRARY_PATH="/usr/local/opt/openssl/lib:$DYLD_LIBRARY_PATH"

alias la="gls -lta --human-readable --no-group --classify --color --group-directories-first"
alias rm='trash'
alias cheatsheet="jq -r '.rules[] | .description' < \"$(ghq root)/github.com/hioki/karabiner-json-updater/personal_rules.json\" | sort | peco"
alias ls="exa"
alias l="exa -ahl --git"
alias grep="ggrep"
alias awk="gawk"

function notify_done() { osascript -e 'display notification "done"' }
function PV() { pbpaste | nvim -R - }

export PATH="$PATH:/usr/local/opt/mosquitto/sbin:/usr/local/opt/mosquitto/bin"

fpath=($(brew --prefix)/share/zsh-completions $fpath)
fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
fpath=($HOME/.zfunc $fpath)

# eval "$(rbenv init - zsh)"
eval "$(nodenv init -)"

autoload -U compinit
compinit -u
